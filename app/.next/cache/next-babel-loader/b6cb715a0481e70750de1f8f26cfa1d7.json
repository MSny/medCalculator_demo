{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n/*\n * Landing page\n */\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { SET_WEIGHT, SET_AGE } from '../../redux/actions/calculatorActions';\nimport { Button, Container, Grid, Header, Input, Divider, Segment } from 'semantic-ui-react'; // import Router from 'next/router';\n\nvar Calculator = /*#__PURE__*/function (_React$Component) {\n  _inherits(Calculator, _React$Component);\n\n  var _super = _createSuper(Calculator);\n\n  _createClass(Calculator, null, [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(_ref) {\n      var store = _ref.store;\n    }\n  }]);\n\n  function Calculator(props) {\n    _classCallCheck(this, Calculator);\n\n    return _super.call(this, props);\n  }\n\n  _createClass(Calculator, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(Container, {\n        size: \"large\",\n        textAlign: \"center\"\n      }, __jsx(Header, {\n        as: \"h2\"\n      }, \"MD Calc Demo\"), __jsx(\"br\", null), __jsx(Segment, null, __jsx(Grid, {\n        columns: 2\n      }, __jsx(Grid.Row, null, __jsx(Grid.Column, null, __jsx(Header, {\n        as: \"h4\"\n      }, \"Sex\")), __jsx(Grid.Column, null, __jsx(Button.Group, null, __jsx(Button, null, \"Female\"), __jsx(Button, null, \"Male\")))), __jsx(Divider, {\n        section: true\n      }), __jsx(Grid.Row, null, __jsx(Grid.Column, null, __jsx(Header, {\n        as: \"h4\"\n      }, \"Age\")), __jsx(Grid.Column, null, __jsx(Input, {\n        label: {\n          basic: true,\n          content: 'years'\n        },\n        labelPosition: \"right\",\n        placeholder: \"Enter age...\"\n      }))), __jsx(Divider, {\n        section: true\n      }), __jsx(Grid.Row, null, __jsx(Grid.Column, null, __jsx(Header, {\n        as: \"h4\"\n      }, \"Weight\")), __jsx(Grid.Column, null, __jsx(Input, {\n        label: {\n          basic: true,\n          content: 'kg'\n        },\n        labelPosition: \"right\",\n        placeholder: \"Enter weight...\"\n      }))), __jsx(Divider, {\n        section: true\n      }), __jsx(Grid.Row, null, __jsx(Grid.Column, null, __jsx(Header, {\n        as: \"h4\"\n      }, \"Creatinine\")), __jsx(Grid.Column, null, __jsx(Input, {\n        label: {\n          basic: true,\n          content: 'mg/dl'\n        },\n        labelPosition: \"right\",\n        placeholder: \"Enter creatinine...\"\n      }))), __jsx(Divider, {\n        section: true\n      }), __jsx(Grid.Row, null, __jsx(Grid.Column, null, __jsx(Header, {\n        as: \"h4\"\n      }, \"Height\")), __jsx(Grid.Column, null, __jsx(Input, {\n        label: {\n          basic: true,\n          content: 'cm'\n        },\n        labelPosition: \"right\",\n        placeholder: \"Enter height...\"\n      }))))));\n    }\n  }]);\n\n  return Calculator;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    stats: state.stats.value\n  };\n};\n\nvar mapDispatchToProps = {\n  setAge: setAge,\n  setWeight: setWeight\n};\n\nCalculator.getInitialProps = function () {\n  return {\n    custom: 'custom'\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Calculator);","map":null,"metadata":{},"sourceType":"module"}